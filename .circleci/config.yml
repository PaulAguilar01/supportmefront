version: 2.1
orbs:
  heroku: circleci/heroku@1.0.1
attach-workspace: &attach-workspace
  attach_workspace:
    at: ~/repo
aliases:
  - &filter-only-master
    branches:
      only:
        - master
jobs:
  build-and-install-dependencies:
    working_directory: ~/repo
    docker:
      - image: circleci/node:10
    steps:
      - checkout # special step to check out source code to working directory
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - v1-repo-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies with NPM
          command: npm install # replace with `yarn install` if using yarn
      - save_cache: # special step to save the dependency cache
          key: v1-repo-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"
  security-scan:
    working_directory: ~/repo
    machine: true
    steps:
      - *attach-workspace
      - run:
          name: Security Scan with Hawkeye
          command: docker run --rm --name="hawkeye" -v $PWD:/target stono/hawkeye

  unit-test:
    working_directory: ~/repo
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: Run tests
          command: npm install test --passWithNoTests # replace with `yarn test` if using yarn
      - store_artifacts:
          path: test-results
      - store_test_results:
          path: test-results

  deploy-staging:
    working_directory: ~/repo
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: Package Application
          command: |
            npm install
            yarn run build --yes
            mkdir -p /tmp/app
            cp -avR build/* /tmp/app
            cp .circleci/server.js /tmp/app
            cp .circleci/package.json /tmp/app
      - store_artifacts:
          path: /tmp/app
      - run:
          name: Deploy Master to Heroku Staging
          command: |
            cd /tmp/app
            git config --global user.name "CircleCI"
            git init
            git add .
            git commit -m "Deploy"
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME_STAGING.git master -f
  deploy-production:
    working_directory: ~/repo
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: Package Application
          command: |
            npm install
            yarn run build --yes
            mkdir -p /tmp/app
            cp -avR build/* /tmp/app
            cp .circleci/server.js /tmp/app
            cp .circleci/package.json /tmp/app
      - store_artifacts:
          path: /tmp/app
      - run:
          name: Deploy Master to Heroku Production
          command: |
            cd /tmp/app
            git config --global user.name "CircleCI"
            git init
            git add .
            git commit -m "Deploy"
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master -f

workflows:
  Build and Test:
    jobs:
      - build-and-install-dependencies
      - security-scan:
          requires:
            - build-and-install-dependencies
      - unit-test:
          requires:
            - build-and-install-dependencies
      - deploy-staging:
          requires:
            - unit-test
            - security-scan
      - approve-deploy-to-production:
          type: approval
          requires:
            - deploy-staging
          filters: *filter-only-master
      - deploy-production:
          requires:
            - approve-deploy-to-production
          filters: *filter-only-master
